{"ast":null,"code":"var _jsxFileName = \"/Users/seanrobnett/Desktop/my-projects/code-test/currency-test/src/Components/Currency/Currency.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Currency extends Component {\n  constructor(props) {\n    super(props);\n\n    this.exchangeRates = () => {\n      axios.get(`https://api.exchangeratesapi.io/latest`).then(res => {\n        this.setState({\n          CurrencyRates: res.data.rates\n        });\n      });\n    };\n\n    this.fromChange = e => {\n      this.setState({\n        fromSelect: e.target.value\n      });\n    };\n\n    this.toChange = e => {\n      this.setState({\n        toSelect: e.target.value\n      });\n    };\n\n    this.calc = (fS, tS, input) => {\n      let calculated = fS === 1 ? input * tS : tS === 1 ? input * (tS / fS) : fS || tS !== 1 ? input * (tS / fS) : \"hello\";\n      this.setState({\n        fromName: calculated\n      });\n    };\n\n    this.state = {\n      CurrencyRates: [],\n      amountInput: \"\",\n      fromSelect: 1.8315,\n      toSelect: 1.8315,\n      fromName: \"\",\n      toName: \"\"\n    };\n    this.fromChange = this.fromChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.exchangeRates();\n  }\n\n  render() {\n    const {\n      CurrencyRates,\n      amountInput,\n      fromSelect,\n      toSelect\n    } = this.state;\n    let rateArray = Object.entries(CurrencyRates);\n    const sortArrays = rateArray.sort().map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: items[1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, items[0]);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: amountInput,\n      onChange: e => this.setState({\n        amountInput: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      value: fromSelect,\n      onChange: this.fromChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"EUR\"), sortArrays), /*#__PURE__*/React.createElement(\"select\", {\n      value: toSelect,\n      onChange: this.toChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"EUR\"), sortArrays), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.calc(fromSelect, toSelect, amountInput),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Currency;","map":{"version":3,"sources":["/Users/seanrobnett/Desktop/my-projects/code-test/currency-test/src/Components/Currency/Currency.jsx"],"names":["React","Component","axios","Currency","constructor","props","exchangeRates","get","then","res","setState","CurrencyRates","data","rates","fromChange","e","fromSelect","target","value","toChange","toSelect","calc","fS","tS","input","calculated","fromName","state","amountInput","toName","bind","componentDidMount","render","rateArray","Object","entries","sortArrays","sort","map","items","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Currency extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      CurrencyRates: [],\n      amountInput: \"\",\n      fromSelect: 1.8315,\n      toSelect: 1.8315,\n      fromName: \"\",\n      toName: \"\"\n    };\n    this.fromChange = this.fromChange.bind(this);\n  }\n  componentDidMount() {\n    this.exchangeRates();\n  }\n  exchangeRates = () => {\n    axios.get(`https://api.exchangeratesapi.io/latest`).then(res => {\n      this.setState({\n        CurrencyRates: res.data.rates\n      });\n    });\n  };\n\n  fromChange = e => {\n    this.setState({\n      fromSelect: e.target.value\n    });\n  };\n  toChange = e => {\n    this.setState({\n      toSelect: e.target.value\n    });\n  };\n\n  calc = (fS, tS, input) => {\n    let calculated =\n      fS === 1\n        ? input * tS\n        : tS === 1\n        ? input * (tS / fS)\n        : fS || tS !== 1\n        ? input * (tS / fS)\n        : \"hello\";\n    this.setState({ fromName: calculated });\n  };\n\n  render() {\n    const { CurrencyRates, amountInput, fromSelect, toSelect } = this.state;\n\n    let rateArray = Object.entries(CurrencyRates);\n\n    const sortArrays = rateArray.sort().map((items, i) => {\n      return (\n        <option key={i} value={items[1]}>\n          {items[0]}\n        </option>\n      );\n    });\n\n    return (\n      <div>\n        <div>\n          <input\n            value={amountInput}\n            onChange={e => this.setState({ amountInput: e.target.value })}\n          />\n          <select value={fromSelect} onChange={this.fromChange}>\n            <option value='1'>EUR</option>\n            {sortArrays}\n          </select>\n          <select value={toSelect} onChange={this.toChange}>\n            <option value='1'>EUR</option>\n            {sortArrays}\n          </select>\n          <button\n            onClick={this.calc(fromSelect, toSelect, amountInput)}\n          ></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Currency;\n"]},"metadata":{},"sourceType":"module"}