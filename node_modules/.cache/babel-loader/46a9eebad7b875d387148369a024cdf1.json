{"ast":null,"code":"var _jsxFileName = \"/Users/seanrobnett/Desktop/my-projects/code-test/currency-test/src/Components/Currency/Currency.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Currency extends Component {\n  constructor(props) {\n    super(props);\n\n    this.exchangeRates = () => {\n      axios.get(`https://api.exchangeratesapi.io/latest`).then(res => {\n        this.setState({\n          CurrencyRates: res.data.rates\n        });\n      });\n    };\n\n    this.onchange = () => {};\n\n    this.calc = (from, to, input, rate, frate) => {\n      let calculated = from === \"EUR\" ? input * rate : to === \"EUR\" ? input * (1 / rate) : from || to !== \"EUR\" ? input * (rate / frate) : \"hello\";\n      return calculated;\n    };\n\n    this.state = {\n      CurrencyRates: [],\n      amountInput: \"\",\n      toSelect: 1.8315\n    };\n  }\n\n  componentDidMount() {\n    this.exchangeRates();\n  }\n\n  render() {\n    const {\n      CurrencyRates,\n      amountInput\n    } = this.state;\n    let rateArray = Object.entries(CurrencyRates);\n    const sortArrays = rateArray.sort().map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: items[1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, items[0]);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: amountInput,\n      onChange: e => this.setState({\n        amountInput: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.to,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \" \", sortArrays), /*#__PURE__*/React.createElement(\"select\", {\n      ref: \"xChangeTo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \" \", sortArrays), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Currency;","map":{"version":3,"sources":["/Users/seanrobnett/Desktop/my-projects/code-test/currency-test/src/Components/Currency/Currency.jsx"],"names":["React","Component","axios","Currency","constructor","props","exchangeRates","get","then","res","setState","CurrencyRates","data","rates","onchange","calc","from","to","input","rate","frate","calculated","state","amountInput","toSelect","componentDidMount","render","rateArray","Object","entries","sortArrays","sort","map","items","i","e","target","value","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,aAZmB,GAYH,MAAM;AACpBJ,MAAAA,KAAK,CAACK,GAAN,CAAW,wCAAX,EAAoDC,IAApD,CAAyDC,GAAG,IAAI;AAC9D,aAAKC,QAAL,CAAc;AACZC,UAAAA,aAAa,EAAEF,GAAG,CAACG,IAAJ,CAASC;AADZ,SAAd;AAGD,OAJD;AAKD,KAlBkB;;AAAA,SAmBnBC,QAnBmB,GAmBR,MAAM,CAAE,CAnBA;;AAAA,SAqBnBC,IArBmB,GAqBZ,CAACC,IAAD,EAAOC,EAAP,EAAWC,KAAX,EAAkBC,IAAlB,EAAwBC,KAAxB,KAAkC;AACvC,UAAIC,UAAU,GACZL,IAAI,KAAK,KAAT,GACIE,KAAK,GAAGC,IADZ,GAEIF,EAAE,KAAK,KAAP,GACAC,KAAK,IAAI,IAAIC,IAAR,CADL,GAEAH,IAAI,IAAIC,EAAE,KAAK,KAAf,GACAC,KAAK,IAAIC,IAAI,GAAGC,KAAX,CADL,GAEA,OAPN;AAQA,aAAOC,UAAP;AACD,KA/BkB;;AAGjB,SAAKC,KAAL,GAAa;AACXX,MAAAA,aAAa,EAAE,EADJ;AAEXY,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,aAAL;AACD;;AAsBDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,aAAF;AAAiBY,MAAAA;AAAjB,QAAiC,KAAKD,KAA5C;AAEA,QAAIK,SAAS,GAAGC,MAAM,CAACC,OAAP,CAAelB,aAAf,CAAhB;AAEA,UAAMmB,UAAU,GAAGH,SAAS,CAACI,IAAV,GAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,CAAR,KAAc;AACpD,0BACE;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,KAAK,EAAED,KAAK,CAAC,CAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAAC,CAAD,CADR,CADF;AAKD,KANkB,CAAnB;AAQA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAEV,WADT;AAEE,MAAA,QAAQ,EAAEY,CAAC,IAAI,KAAKzB,QAAL,CAAc;AAAEa,QAAAA,WAAW,EAAEY,CAAC,CAACC,MAAF,CAASC;AAAxB,OAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAQ,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWL,EAA1B;AAA8B,MAAA,QAAQ,EAAE,KAAKqB,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGR,UAFH,CALF,eASE;AAAQ,MAAA,GAAG,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0BA,UAA1B,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,CADF;AAgBD;;AA/D8B;;AAkEjC,eAAe3B,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Currency extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      CurrencyRates: [],\n      amountInput: \"\",\n      toSelect: 1.8315\n    };\n  }\n  componentDidMount() {\n    this.exchangeRates();\n  }\n  exchangeRates = () => {\n    axios.get(`https://api.exchangeratesapi.io/latest`).then(res => {\n      this.setState({\n        CurrencyRates: res.data.rates\n      });\n    });\n  };\n  onchange = () => {};\n\n  calc = (from, to, input, rate, frate) => {\n    let calculated =\n      from === \"EUR\"\n        ? input * rate\n        : to === \"EUR\"\n        ? input * (1 / rate)\n        : from || to !== \"EUR\"\n        ? input * (rate / frate)\n        : \"hello\";\n    return calculated;\n  };\n\n  render() {\n    const { CurrencyRates, amountInput } = this.state;\n\n    let rateArray = Object.entries(CurrencyRates);\n\n    const sortArrays = rateArray.sort().map((items, i) => {\n      return (\n        <option key={i} value={items[1]}>\n          {items[0]}\n        </option>\n      );\n    });\n\n    return (\n      <div>\n        <div>\n          <input\n            value={amountInput}\n            onChange={e => this.setState({ amountInput: e.target.value })}\n          />\n          <select value={this.state.to} onChange={this.handleChange}>\n            {\" \"}\n            {sortArrays}\n          </select>\n          <select ref='xChangeTo'> {sortArrays}</select>\n          <button></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Currency;\n"]},"metadata":{},"sourceType":"module"}