{"ast":null,"code":"var _jsxFileName = \"/Users/seanrobnett/Desktop/my-projects/code-test/currency-test/src/Components/Chart/Chart.jsx\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      exc,\n      date,\n      based\n    } = this.props;\n    const mapForChart = exc.map(items => {\n      let options = {\n        theme: \"light\",\n        title: {\n          text: \"Comparison\"\n        },\n        subtitles: [{\n          text: items[1]\n        }],\n        axisY: {\n          includeZero: false,\n          prefix: \"s\"\n        },\n        toolTip: {\n          shared: true\n        },\n        data: [{\n          type: \"area\",\n          name: \"GBP\",\n          showInLegend: true,\n          xValueFormatString: \"MMM YYYY\",\n          yValueFormatString: \"₹#,##0.##\",\n          dataPoints: [{\n            x: new Date({\n              date\n            }),\n            y: items[0]\n          }]\n        }]\n      };\n      return options;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: mapForChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/seanrobnett/Desktop/my-projects/code-test/currency-test/src/Components/Chart/Chart.jsx"],"names":["React","Component","CanvasJSReact","CanvasJS","CanvasJSChart","Chart","constructor","props","state","render","exc","date","based","mapForChart","map","items","options","theme","title","text","subtitles","axisY","includeZero","prefix","toolTip","shared","data","type","name","showInLegend","xValueFormatString","yValueFormatString","dataPoints","x","Date","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA;AAAb,QAAuB,KAAKL,KAAlC;AACA,UAAMM,WAAW,GAAGH,GAAG,CAACI,GAAJ,CAAQC,KAAK,IAAI;AACnC,UAAIC,OAAO,GAAG;AACZC,QAAAA,KAAK,EAAE,OADK;AAEZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD,SAFK;AAKZC,QAAAA,SAAS,EAAE,CAAC;AAAED,UAAAA,IAAI,EAAEJ,KAAK,CAAC,CAAD;AAAb,SAAD,CALC;AAMZM,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,KADR;AAELC,UAAAA,MAAM,EAAE;AAFH,SANK;AAUZC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD,SAVG;AAaZC,QAAAA,IAAI,EAAE,CACJ;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEC,UAAAA,IAAI,EAAE,KAFR;AAGEC,UAAAA,YAAY,EAAE,IAHhB;AAIEC,UAAAA,kBAAkB,EAAE,UAJtB;AAKEC,UAAAA,kBAAkB,EAAE,WALtB;AAMEC,UAAAA,UAAU,EAAE,CAAC;AAAEC,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS;AAAEvB,cAAAA;AAAF,aAAT,CAAL;AAAyBwB,YAAAA,CAAC,EAAEpB,KAAK,CAAC,CAAD;AAAjC,WAAD;AANd,SADI;AAbM,OAAd;AAwBA,aAAOC,OAAP;AACD,KA1BmB,CAApB;AA2BA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAzC2B;;AA4C9B,eAAeR,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport CanvasJSReact from \"./canvasjs.react\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    const { exc, date, based } = this.props;\n    const mapForChart = exc.map(items => {\n      let options = {\n        theme: \"light\",\n        title: {\n          text: \"Comparison\"\n        },\n        subtitles: [{ text: items[1] }],\n        axisY: {\n          includeZero: false,\n          prefix: \"s\"\n        },\n        toolTip: {\n          shared: true\n        },\n        data: [\n          {\n            type: \"area\",\n            name: \"GBP\",\n            showInLegend: true,\n            xValueFormatString: \"MMM YYYY\",\n            yValueFormatString: \"₹#,##0.##\",\n            dataPoints: [{ x: new Date({ date }), y: items[0] }]\n          }\n        ]\n      };\n      return options;\n    });\n    return (\n      <div>\n        <CanvasJSChart options={mapForChart} />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}